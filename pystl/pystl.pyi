"""
example_pb bindings
"""
from __future__ import annotations
import typing
__all__ = ['TreeDict']
class TreeDict:
    def __contains__(self, arg0: typing.Any) -> bool:
        ...
    def __delitem__(self, arg0: typing.Any) -> None:
        ...
    def __getitem__(self, arg0: typing.Any) -> typing.Any:
        ...
    @typing.overload
    def __init__(self) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: dict[typing.Any, typing.Any]) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: list[tuple[typing.Any, typing.Any]]) -> None:
        ...
    def __len__(self) -> int:
        ...
    def __repr__(self) -> str:
        ...
    def __setitem__(self, arg0: typing.Any, arg1: typing.Any) -> None:
        ...
    def __str__(self) -> str:
        ...
